Lintcode 085 - Insert Node in a Binary Search Tree.java

/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @param root: The root of the binary search tree.
     * @param node: insert this node into the binary search tree
     * @return: The root of the new binary search tree.
     */
    public TreeNode insertNode(TreeNode root, TreeNode node) {
        if(root == null) {
            return node;
        }
        
        TreeNode pointer = root;
        TreeNode last = pointer;
        while(pointer != null) {
        	last = pointer;
        	if(pointer.val < node.val) {
        		pointer = pointer.right;
        	} else if(pointer.val > node.val) {
        		pointer = pointer.left;
        	}
        }

        if(last.val < node.val) {
        	last.right = node;
        } else {
        	last.left = node;
        }

        return root;
    }
}

//Recursion
public class Solution {
    /**
     * @param root: The root of the binary search tree.
     * @param node: insert this node into the binary search tree
     * @return: The root of the new binary search tree.
     */
    public TreeNode insertNode(TreeNode root, TreeNode node) {
        // write your code here
        if(root == null) {
            return node;
        }
        
        if(root.val < node.val) {
            root.right = insertNode(root.right, node);
        } else  {
            root.left = insertNode(root.left, node);
        }
        
        return root;
    }
}